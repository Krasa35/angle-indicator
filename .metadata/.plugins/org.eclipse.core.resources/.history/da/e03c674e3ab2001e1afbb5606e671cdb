/**
  ******************************************************************************
  * @file		: interrupts.c
  * @author  	: KKI		kacper.krasin35@gmail.com
  * @version 	: 0.0.1
  * @date    	: Jan 12, 2024
  * @brief   	: Brief of source file
  *
  ******************************************************************************
**/
#include "interrupts.h"

extern struct AS5600 device;
extern uint8_t* msg;
struct _hbufUART _buffer;

void _MODE_INIT(struct _MODE* handle){
	handle->_DEBUG = "DEBUG";
	handle->_MANUAL = "MANUAL";
	handle->_REMOTE = "REMOTE";
}

void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim){
	if (htim->Instance == TIM3) {
	  float zmienna = AS5600_Angle(&device);
	  char buffer[20];  // Adjust the size as needed
	  int len = snprintf(buffer, sizeof(buffer), "%f", zmienna);
	  buffer[len++] = '\r';
	  buffer[len++] = '\n';
	  //HAL_UART_Transmit(&huart3, (uint8_t *)buffer, len, 100);
	}
}
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
	_MODE_INIT(&_buffer.mode);
	if (huart == &huart3)
	{
		sscanf(&msg, "%c", &_buffer.b);
		if(_buffer.b != ';'){
			_buffer.receivedBuffer[_buffer.bufferIndex++] = _buffer.b;
		}
		else{
            // Reset the buffer and index
			if (_buffer.temp == _buffer.receivedBuffer){
				HAL_UART_Transmit_IT(&huart3, _buffer.receivedBuffer, _buffer.bufferIndex);
			}

            memset(_buffer.receivedBuffer, 0, sizeof(_buffer.bufferIndex));
			_buffer.bufferIndex = 0;
		}
		HAL_UART_Receive_IT(&huart3, (uint8_t*)&msg, 1);
	}
}
